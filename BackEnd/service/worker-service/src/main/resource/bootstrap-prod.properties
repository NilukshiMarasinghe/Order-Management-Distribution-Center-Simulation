# Platform configs
server.port=10003
server.ext.port=8085
spring.datasource.tomcat.initial-size=1

#dev-db
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://worker-db:3306/worker_db?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Platform configs
spring.application.name=worker-service
spring.datasource.platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.open-in-view=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.http.multipart.max-request-size=5MB
spring.http.multipart.max-file-size=4MB
spring.messages.fallback-to-system-locale=false


# App configs - general
app.crypto.password=$le@rpi$ture
app.crypto.salt=5e0744940b5e369d

app.auth.defaultAccessTokenTimeout=1800
app.auth.defaultRefreshTokenTimeout=86400
app.auth.kfName=cpapakey.jks
app.auth.ksPass=cppass
app.auth.resourceId=AUS
app.auth.corsAllowedOrigins=*

app.passwordPolicy=^.{6,100}$

# App configs - endpoints
app.endpoint.api=/api
app.externalEndpointHost=

app.endpoint.authToken=http://localhost:${server.ext.port}/oauth/token
app.endpoint.logout=${app.endpoint.api}/logout


#USER
app.endpoint.userBasePath=${app.endpoint.api}/user
app.endpoint.userCreate=${app.endpoint.userBasePath}
app.endpoint.userView=${app.endpoint.userBasePath}/{id}

#ROLE
app.endpoint.roleBasePath=${app.endpoint.api}/role
app.endpoint.roleCreate=${app.endpoint.roleBasePath}
app.endpoint.roleView=${app.endpoint.roleBasePath}/{id}

#Worker
app.endpoint.workerBasePath=${app.endpoint.api}/worker
app.endpoint.getAllWorkers=${app.endpoint.workerBasePath}
app.endpoint.getAllByStatus=${app.endpoint.workerBasePath}/available/{isAvailable}
app.endpoint.getByName=${app.endpoint.workerBasePath}/{name}

#Task
app.endpoint.taskBasePath=${app.endpoint.api}/task
app.endpoint.getShortestPath=${app.endpoint.taskBasePath}/registerShortestPath
app.endpoint.getTasksByPicker=${app.endpoint.taskBasePath}/getAllByPicker/{pickerId}

#External - MS2MS endpoint registry - consider about the environment regarding base path
app.externalEndpoint.getShortestPath=http://simulation-service:10001/api/map/shortestPath
app.externalEndpoint.fetchProductDetail=http://simulation-service:10001/api/items/
app.externalEndpoint.changeWorkerStatus=http://simulation-service:10001/api/worker/changeStatus/
app.externalEndpoint.updateTask=http://order-management-service:8080/task
